(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     51872,       1003]
NotebookOptionsPosition[     51122,        973]
NotebookOutlinePosition[     51476,        989]
CellTagsIndexPosition[     51433,        986]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "u_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "u"}], ")"}], "^", "2"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", 
       RowBox[{"s", "^", "2"}]}], ")"}]}], "]"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "*", "Pi"}], "]"}], "*", "s"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.665613075696681*^9, 3.665613121034856*^9}, {
  3.6656131538454723`*^9, 3.6656131885059433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6656131778396053`*^9, 3.665613179849423*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", "\[Pi]", " ", "Sqrt"}]]], "Output",
 CellChangeTimes->{3.665613180261713*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "[", "x_", "]"}], ":=", 
  RowBox[{"0.5", "*", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "0", ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6656131680816174`*^9, 3.665613169064989*^9}, {
  3.665613373249914*^9, 3.665613389658513*^9}, {3.665613424200975*^9, 
  3.6656134258241377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "[", "x_", "]"}], ":=", 
  RowBox[{"0.5", "*", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "3", ",", 
     RowBox[{"Sqrt", "[", "3", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6656133871345577`*^9, 3.6656134326639757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g1", "[", "x", "]"}], ",", 
     RowBox[{"g2", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.39792", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.39792", ",", 
           RowBox[{"g1", "[", "1.39792", "]"}]}], "}"}]}], "}"}], "]"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665613409896801*^9, 3.665613448439515*^9}, {
  3.665613478936284*^9, 3.665613552664077*^9}, {3.665613702136846*^9, 
  3.665613715070677*^9}, {3.665613817299571*^9, 3.665613843594998*^9}, {
  3.665613969478384*^9, 3.665613982821291*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
QMFMFfFsQUc7pUsTPQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> {
       RGBColor[1, 0, 0], 
       LineBox[{{1.39792, 0}, {1.39792, 0.075081891311486}}]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{-5, 10}, {0., 0.19947063244446397`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"g1", "(", "x", ")"}], 
       RowBox[{"g2", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.665613595234187*^9, {3.665613710060617*^9, 3.665613719890306*^9}, 
   3.6656138458310747`*^9, 3.6656140182778788`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.665613590698328*^9, 3.6656136018770514`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"g1", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"g2", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665613462444353*^9, 3.665613465896311*^9}, {
  3.6656136227230577`*^9, 3.6656136806479387`*^9}, {3.665613891094418*^9, 
  3.665613963487604*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.665613651632037*^9, 3.6656136833632717`*^9, {3.665613900588667*^9, 
   3.665613926683161*^9}, 3.665613964397214*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", 
      RowBox[{"-", "4.397916222564442`"}]}], ",", 
     RowBox[{"x2", "\[Rule]", 
      RowBox[{"-", "4.397916222564442`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "1.397916222564442`"}], ",", 
     RowBox[{"x2", "\[Rule]", 
      RowBox[{"-", "4.397916222564442`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", 
      RowBox[{"-", "4.397916222564442`"}]}], ",", 
     RowBox[{"x2", "\[Rule]", "1.397916222564442`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "1.397916222564442`"}], ",", 
     RowBox[{"x2", "\[Rule]", "1.397916222564442`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.665613466237103*^9, 3.6656136517397537`*^9, 3.665613683367484*^9, {
   3.6656139005921183`*^9, 3.6656139266864347`*^9}, 3.6656139644024982`*^9}]
}, Open  ]]
},
WindowSize->{808, 620},
WindowMargins->{{20, Automatic}, {Automatic, 44}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 610, 19, 28, "Input"],
Cell[CellGroupData[{
Cell[1193, 43, 155, 3, 28, "Input"],
Cell[1351, 48, 130, 3, 50, "Output"]
}, Open  ]],
Cell[1496, 54, 337, 8, 28, "Input"],
Cell[1836, 64, 273, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[2134, 75, 975, 26, 46, "Input"],
Cell[3112, 103, 45959, 809, 279, "Output"]
}, Open  ]],
Cell[49086, 915, 94, 1, 28, InheritFromParent],
Cell[CellGroupData[{
Cell[49205, 920, 316, 7, 28, "Input"],
Cell[49524, 929, 630, 13, 41, "Message"],
Cell[50157, 944, 949, 26, 46, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

